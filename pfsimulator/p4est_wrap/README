This is the README file for parflow+p4est integration.

Parflow can be compiled against the p4est software library
such that the latter functions as mesh manager of the former. The
algorithmic approach of the coupling is described in the following
reference

C. Burstedde, J. A. Fonseca, and S. Kollet, Enhancing speed and scalability of
the ParFlow simulation code, Computational Geosciences, 22 (2018), pp. 347â€“361.

1. Installing p4est.

The official web page for source code and documentation for
p4est is

		http://www.p4est.org/ 

p4est uses the GNU autotools build system. We
require the code to be compiled with parallel functionality.
(e.g. --enable-mpi)

Please, see the official documentation for more details.

2. Compiling ParFlow against p4est with CMake

Proceed with the CMake installation instructions for ParFlow
with the additional option -DP4EST_ROOT=$(P4EST_DIR), for example:

```shell
   mkdir build
   cd build
   cmake ../parflow \
         -DCMAKE_INSTALL_PREFIX=$(PARFLOW_DIR) \
         -DPARFLOW_AMPS_LAYER=mpi1 \
         -DP4EST_ROOT=$(P4EST_DIR)
```

We require ParFlow to be compiled with MPI enabled. Make sure to use
the same MPI compiler employed to build p4est.
After this step is completed, building and installing can be done with:

```shell
   cd build
   make
   make install
```

2. Using p4est as mesh manager in a ParFlow simulation.

In order to use p4est as ParFlow's mesh backend, four new key/value
pairs need to be specified in the tcl input file. These are:

pfset use_pforest			"yes" [default = "no"]

pfset ComputationalSubgrid.MX		5 [default 1]
pfset ComputationalSubgrid.MY		5 [default 1]
pfset ComputationalSubgrid.MZ		5 [default 1]

The last three specify the desired size of a subgrid. The key/values
defining the process topology are ignored when p4est is
used as mesh manager. Given the total number of processes (MPI size),
the process partition is internally managed by p4est.
Hence, in order to run the simulation you should
generate the corresponding .pfidb file and specify the number of
processes (NPROCS) directly in the command line.
For example if the configuration script is called test.tcl at the
end of the tcl script use:

pfwritedb "runtest"

and to executed it:

```shell
   tclsh test.tcl
   mpirun -np $NPROCS $PARFLOW_DIR/bin/parflow runtest
```

3. Additional information / warnings

With p4est enabled the user has the flexibility of using less
processes (MPI ranks) than the total number of subgrids.

Configurations  in which the number of processes is bigger
than the number of subgrids are not yet supported. 

Certain combinations of total number of grid points and
subgrid size are not allowed. In that case the program 
automaticaly quits and prints the pair of parameters that
need to be changed.

Configurations in which the number of subgrids in the
Z coordinate direction is bigger than one have not been tested.

The MGSemi preconditioner is not supported.

Coupling with the common land model (--with-clm) is only
supported when the number of subgrids match the number of
processes.
